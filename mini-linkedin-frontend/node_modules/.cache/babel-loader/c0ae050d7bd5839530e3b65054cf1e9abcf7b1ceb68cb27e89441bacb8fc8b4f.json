{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HARIBABU\\\\OneDrive\\\\Desktop\\\\project\\\\mini-linkedin-frontend\\\\client\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\n// src/pages/Home.js\nimport React, { useContext, useEffect } from 'react';\nimport { PostContext, PostProvider } from '../context/PostContext';\nimport { AuthContext } from '../context/AuthContext';\nimport PostForm from '../components/posts/PostForm';\nimport PostItem from '../components/posts/PostItem';\nimport Spinner from '../components/layout/Spinner';\nimport { useNavigate } from 'react-router-dom';\n\n// This is the actual content of the page\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomeContent = () => {\n  _s();\n  const {\n    posts,\n    loading,\n    getPosts\n  } = useContext(PostContext);\n  const {\n    isAuthenticated,\n    loading: authLoading\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n  useEffect(() => {\n    // If authentication is still loading, do nothing yet\n    if (authLoading) {\n      return;\n    }\n    // If not authenticated, redirect to login\n    if (!isAuthenticated) {\n      navigate('/login');\n    } else {\n      // Otherwise, get the posts\n      getPosts();\n    }\n    // Rerun this effect if auth state changes\n  }, [isAuthenticated, authLoading, getPosts, navigate]);\n\n  // Show a spinner while posts are loading\n  if (loading) return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: '#0a66c2'\n      },\n      children: \"Home Feed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Welcome to the community!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PostForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts\",\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(PostItem, {\n        post: post\n      }, post._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n// We wrap the page content in the PostProvider so it has access to post-related state\n_s(HomeContent, \"L0t0+0EY/BBdt1mD2R4pSSk1mjk=\", false, function () {\n  return [useNavigate];\n});\n_c = HomeContent;\nconst Home = () => /*#__PURE__*/_jsxDEV(PostProvider, {\n  children: /*#__PURE__*/_jsxDEV(HomeContent, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 50,\n  columnNumber: 5\n}, this);\n_c2 = Home;\nexport default Home;\nvar _c, _c2;\n$RefreshReg$(_c, \"HomeContent\");\n$RefreshReg$(_c2, \"Home\");","map":{"version":3,"names":["React","useContext","useEffect","PostContext","PostProvider","AuthContext","PostForm","PostItem","Spinner","useNavigate","jsxDEV","_jsxDEV","HomeContent","_s","posts","loading","getPosts","isAuthenticated","authLoading","navigate","fileName","_jsxFileName","lineNumber","columnNumber","children","style","color","className","map","post","_id","_c","Home","_c2","$RefreshReg$"],"sources":["C:/Users/HARIBABU/OneDrive/Desktop/project/mini-linkedin-frontend/client/src/pages/Home.js"],"sourcesContent":["// src/pages/Home.js\r\nimport React, { useContext, useEffect } from 'react';\r\nimport { PostContext, PostProvider } from '../context/PostContext';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport PostForm from '../components/posts/PostForm';\r\nimport PostItem from '../components/posts/PostItem';\r\nimport Spinner from '../components/layout/Spinner';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n// This is the actual content of the page\r\nconst HomeContent = () => {\r\n    const { posts, loading, getPosts } = useContext(PostContext);\r\n    const { isAuthenticated, loading: authLoading } = useContext(AuthContext);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        // If authentication is still loading, do nothing yet\r\n        if (authLoading) {\r\n            return;\r\n        }\r\n        // If not authenticated, redirect to login\r\n        if (!isAuthenticated) {\r\n            navigate('/login');\r\n        } else {\r\n            // Otherwise, get the posts\r\n            getPosts();\r\n        }\r\n        // Rerun this effect if auth state changes\r\n    }, [isAuthenticated, authLoading, getPosts, navigate]);\r\n\r\n    // Show a spinner while posts are loading\r\n    if (loading) return <Spinner />;\r\n\r\n    return (\r\n        <div>\r\n            <h1 style={{ color: '#0a66c2' }}>Home Feed</h1>\r\n            <p>Welcome to the community!</p>\r\n            <PostForm />\r\n            <div className=\"posts\">\r\n                {posts.map((post) => (\r\n                    <PostItem key={post._id} post={post} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n// We wrap the page content in the PostProvider so it has access to post-related state\r\nconst Home = () => (\r\n    <PostProvider>\r\n        <HomeContent />\r\n    </PostProvider>\r\n);\r\n\r\nexport default Home;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AACpD,SAASC,WAAW,EAAEC,YAAY,QAAQ,wBAAwB;AAClE,SAASC,WAAW,QAAQ,wBAAwB;AACpD,OAAOC,QAAQ,MAAM,8BAA8B;AACnD,OAAOC,QAAQ,MAAM,8BAA8B;AACnD,OAAOC,OAAO,MAAM,8BAA8B;AAClD,SAASC,WAAW,QAAQ,kBAAkB;;AAE9C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM;IAAEC,KAAK;IAAEC,OAAO;IAAEC;EAAS,CAAC,GAAGf,UAAU,CAACE,WAAW,CAAC;EAC5D,MAAM;IAAEc,eAAe;IAAEF,OAAO,EAAEG;EAAY,CAAC,GAAGjB,UAAU,CAACI,WAAW,CAAC;EACzE,MAAMc,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9BP,SAAS,CAAC,MAAM;IACZ;IACA,IAAIgB,WAAW,EAAE;MACb;IACJ;IACA;IACA,IAAI,CAACD,eAAe,EAAE;MAClBE,QAAQ,CAAC,QAAQ,CAAC;IACtB,CAAC,MAAM;MACH;MACAH,QAAQ,CAAC,CAAC;IACd;IACA;EACJ,CAAC,EAAE,CAACC,eAAe,EAAEC,WAAW,EAAEF,QAAQ,EAAEG,QAAQ,CAAC,CAAC;;EAEtD;EACA,IAAIJ,OAAO,EAAE,oBAAOJ,OAAA,CAACH,OAAO;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAE/B,oBACIZ,OAAA;IAAAa,QAAA,gBACIb,OAAA;MAAIc,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAU,CAAE;MAAAF,QAAA,EAAC;IAAS;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/CZ,OAAA;MAAAa,QAAA,EAAG;IAAyB;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAChCZ,OAAA,CAACL,QAAQ;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACZZ,OAAA;MAAKgB,SAAS,EAAC,OAAO;MAAAH,QAAA,EACjBV,KAAK,CAACc,GAAG,CAAEC,IAAI,iBACZlB,OAAA,CAACJ,QAAQ;QAAgBsB,IAAI,EAAEA;MAAK,GAArBA,IAAI,CAACC,GAAG;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CACzC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;;AAED;AAAAV,EAAA,CArCMD,WAAW;EAAA,QAGIH,WAAW;AAAA;AAAAsB,EAAA,GAH1BnB,WAAW;AAsCjB,MAAMoB,IAAI,GAAGA,CAAA,kBACTrB,OAAA,CAACP,YAAY;EAAAoB,QAAA,eACTb,OAAA,CAACC,WAAW;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACL,CACjB;AAACU,GAAA,GAJID,IAAI;AAMV,eAAeA,IAAI;AAAC,IAAAD,EAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}