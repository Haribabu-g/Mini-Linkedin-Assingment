{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HARIBABU\\\\OneDrive\\\\Desktop\\\\project\\\\mini-linkedin-frontend\\\\client\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\n// src/context/AuthContext.js\nimport React, { createContext, useReducer, useEffect } from 'react';\nimport api from '../api';\n\n// (The initialState and authReducer remain the same as the previous final version)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  loading: true,\n  user: null,\n  error: null\n};\nconst authReducer = (state, action) => {\n  const {\n    type,\n    payload\n  } = action;\n  switch (type) {\n    case 'USER_LOADED':\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: payload\n      };\n    case 'LOGIN_SUCCESS':\n      localStorage.setItem('token', payload.token);\n      return {\n        ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false,\n        error: null\n      };\n    case 'REGISTER_SUCCESS':\n      return {\n        ...state,\n        loading: false,\n        error: null\n      };\n    case 'AUTH_ERROR':\n    case 'LOGOUT':\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        user: null,\n        error: payload\n      };\n    case 'CLEAR_ERRORS':\n      return {\n        ...state,\n        error: null\n      };\n    default:\n      return state;\n  }\n};\nexport const AuthContext = /*#__PURE__*/createContext(initialState);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // loadUser, register, login, logout, clearErrors functions remain the same\n  const loadUser = async () => {\n    if (localStorage.token) {\n      try {\n        const res = await api.get('/auth');\n        dispatch({\n          type: 'USER_LOADED',\n          payload: res.data\n        });\n      } catch (err) {\n        dispatch({\n          type: 'AUTH_ERROR'\n        });\n      }\n    } else {\n      dispatch({\n        type: 'AUTH_ERROR'\n      });\n    }\n  };\n  useEffect(() => {\n    loadUser();\n  }, []);\n  const register = async formData => {\n    try {\n      await api.post('/auth/register', formData);\n      dispatch({\n        type: 'REGISTER_SUCCESS'\n      });\n    } catch (err) {\n      dispatch({\n        type: 'AUTH_ERROR',\n        payload: err.response.data\n      });\n    }\n  };\n  const login = async formData => {\n    try {\n      const res = await api.post('/auth/login', formData);\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: 'AUTH_ERROR',\n        payload: err.response.data\n      });\n    }\n  };\n  const logout = () => dispatch({\n    type: 'LOGOUT'\n  });\n  const clearErrors = () => dispatch({\n    type: 'CLEAR_ERRORS'\n  });\n\n  // --- ADD THESE NEW FUNCTIONS ---\n\n  // Forgot Password\n  const forgotPassword = async email => {\n    try {\n      await api.post('/auth/forgot-password', email);\n    } catch (err) {\n      console.error('Forgot password error', err.response.data);\n    }\n  };\n\n  // Reset Password\n  const resetPassword = async (token, password) => {\n    try {\n      await api.post(`/auth/reset-password/${token}`, password);\n    } catch (err) {\n      console.error('Reset password error', err.response.data);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      isAuthenticated: state.isAuthenticated,\n      loading: state.loading,\n      user: state.user,\n      error: state.error,\n      register,\n      login,\n      logout,\n      clearErrors,\n      loadUser,\n      forgotPassword,\n      // Add to provider\n      resetPassword // Add to provider\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useReducer","useEffect","api","jsxDEV","_jsxDEV","initialState","token","localStorage","getItem","isAuthenticated","loading","user","error","authReducer","state","action","type","payload","setItem","removeItem","AuthContext","AuthProvider","children","_s","dispatch","loadUser","res","get","data","err","register","formData","post","response","login","logout","clearErrors","forgotPassword","email","console","resetPassword","password","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HARIBABU/OneDrive/Desktop/project/mini-linkedin-frontend/client/src/context/AuthContext.js"],"sourcesContent":["// src/context/AuthContext.js\r\nimport React, { createContext, useReducer, useEffect } from 'react';\r\nimport api from '../api';\r\n\r\n// (The initialState and authReducer remain the same as the previous final version)\r\nconst initialState = { token: localStorage.getItem('token'), isAuthenticated: null, loading: true, user: null, error: null };\r\nconst authReducer = (state, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case 'USER_LOADED': return { ...state, isAuthenticated: true, loading: false, user: payload };\r\n    case 'LOGIN_SUCCESS': localStorage.setItem('token', payload.token); return { ...state, ...payload, isAuthenticated: true, loading: false, error: null };\r\n    case 'REGISTER_SUCCESS': return { ...state, loading: false, error: null };\r\n    case 'AUTH_ERROR': case 'LOGOUT': localStorage.removeItem('token'); return { ...state, token: null, isAuthenticated: false, loading: false, user: null, error: payload };\r\n    case 'CLEAR_ERRORS': return { ...state, error: null };\r\n    default: return state;\r\n  }\r\n};\r\n\r\nexport const AuthContext = createContext(initialState);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  // loadUser, register, login, logout, clearErrors functions remain the same\r\n  const loadUser = async () => { if (localStorage.token) { try { const res = await api.get('/auth'); dispatch({ type: 'USER_LOADED', payload: res.data }); } catch (err) { dispatch({ type: 'AUTH_ERROR' }); } } else { dispatch({ type: 'AUTH_ERROR' }); } };\r\n  useEffect(() => { loadUser(); }, []);\r\n  const register = async (formData) => { try { await api.post('/auth/register', formData); dispatch({ type: 'REGISTER_SUCCESS' }); } catch (err) { dispatch({ type: 'AUTH_ERROR', payload: err.response.data }); } };\r\n  const login = async (formData) => { try { const res = await api.post('/auth/login', formData); dispatch({ type: 'LOGIN_SUCCESS', payload: res.data }); } catch (err) { dispatch({ type: 'AUTH_ERROR', payload: err.response.data }); } };\r\n  const logout = () => dispatch({ type: 'LOGOUT' });\r\n  const clearErrors = () => dispatch({ type: 'CLEAR_ERRORS' });\r\n\r\n  // --- ADD THESE NEW FUNCTIONS ---\r\n\r\n  // Forgot Password\r\n  const forgotPassword = async (email) => {\r\n    try {\r\n      await api.post('/auth/forgot-password', email);\r\n    } catch (err) {\r\n      console.error('Forgot password error', err.response.data);\r\n    }\r\n  };\r\n\r\n  // Reset Password\r\n  const resetPassword = async (token, password) => {\r\n    try {\r\n      await api.post(`/auth/reset-password/${token}`, password);\r\n    } catch (err) {\r\n      console.error('Reset password error', err.response.data);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        token: state.token,\r\n        isAuthenticated: state.isAuthenticated,\r\n        loading: state.loading,\r\n        user: state.user,\r\n        error: state.error,\r\n        register,\r\n        login,\r\n        logout,\r\n        clearErrors,\r\n        loadUser,\r\n        forgotPassword, // Add to provider\r\n        resetPassword,  // Add to provider\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}