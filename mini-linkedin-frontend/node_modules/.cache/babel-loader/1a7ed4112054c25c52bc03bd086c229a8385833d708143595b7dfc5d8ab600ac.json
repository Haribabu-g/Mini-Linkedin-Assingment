{"ast":null,"code":"// src/context/PostContext.js\nimport React,{createContext,useReducer,useCallback}from'react';// 1. Import useCallback\nimport api from'../api';// Initial state\nimport{jsx as _jsx}from\"react/jsx-runtime\";const initialState={posts:[],post:null,loading:true,error:{}};// Create context\nexport const PostContext=/*#__PURE__*/createContext(initialState);// Reducer\nconst postReducer=(state,action)=>{const{type,payload}=action;switch(type){case'GET_POSTS':return{...state,posts:payload,loading:false};case'ADD_POST':return{...state,posts:[payload,...state.posts],loading:false};case'POST_ERROR':return{...state,error:payload,loading:false};default:return state;}};// Provider component\nexport const PostProvider=_ref=>{let{children}=_ref;const[state,dispatch]=useReducer(postReducer,initialState);// 2. Wrap getPosts in useCallback\nconst getPosts=useCallback(async()=>{try{const res=await api.get('/posts');dispatch({type:'GET_POSTS',payload:res.data});}catch(err){dispatch({type:'POST_ERROR',payload:{msg:err.response.statusText,status:err.response.status}});}},[]);// 3. Add empty dependency array\n// 4. Wrap addPost in useCallback as well for consistency\nconst addPost=useCallback(async formData=>{try{const res=await api.post('/posts',formData);dispatch({type:'ADD_POST',payload:res.data});}catch(err){dispatch({type:'POST_ERROR',payload:{msg:err.response.statusText,status:err.response.status}});}},[]);// 5. Add empty dependency array\nreturn/*#__PURE__*/_jsx(PostContext.Provider,{value:{posts:state.posts,post:state.post,loading:state.loading,error:state.error,getPosts,addPost},children:children});};","map":{"version":3,"names":["React","createContext","useReducer","useCallback","api","jsx","_jsx","initialState","posts","post","loading","error","PostContext","postReducer","state","action","type","payload","PostProvider","_ref","children","dispatch","getPosts","res","get","data","err","msg","response","statusText","status","addPost","formData","Provider","value"],"sources":["C:/Users/HARIBABU/OneDrive/Desktop/project/mini-linkedin-frontend/client/src/context/PostContext.js"],"sourcesContent":["// src/context/PostContext.js\r\nimport React, { createContext, useReducer, useCallback } from 'react'; // 1. Import useCallback\r\nimport api from '../api';\r\n\r\n// Initial state\r\nconst initialState = {\r\n  posts: [],\r\n  post: null,\r\n  loading: true,\r\n  error: {},\r\n};\r\n\r\n// Create context\r\nexport const PostContext = createContext(initialState);\r\n\r\n// Reducer\r\nconst postReducer = (state, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case 'GET_POSTS':\r\n      return {\r\n        ...state,\r\n        posts: payload,\r\n        loading: false,\r\n      };\r\n    case 'ADD_POST':\r\n      return {\r\n        ...state,\r\n        posts: [payload, ...state.posts],\r\n        loading: false,\r\n      };\r\n    case 'POST_ERROR':\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Provider component\r\nexport const PostProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(postReducer, initialState);\r\n\r\n  // 2. Wrap getPosts in useCallback\r\n  const getPosts = useCallback(async () => {\r\n    try {\r\n      const res = await api.get('/posts');\r\n      dispatch({\r\n        type: 'GET_POSTS',\r\n        payload: res.data,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: 'POST_ERROR',\r\n        payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n    }\r\n  }, []); // 3. Add empty dependency array\r\n\r\n  // 4. Wrap addPost in useCallback as well for consistency\r\n  const addPost = useCallback(async (formData) => {\r\n    try {\r\n      const res = await api.post('/posts', formData);\r\n      dispatch({\r\n        type: 'ADD_POST',\r\n        payload: res.data,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: 'POST_ERROR',\r\n        payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n    }\r\n  }, []); // 5. Add empty dependency array\r\n\r\n  return (\r\n    <PostContext.Provider\r\n      value={{\r\n        posts: state.posts,\r\n        post: state.post,\r\n        loading: state.loading,\r\n        error: state.error,\r\n        getPosts,\r\n        addPost,\r\n      }}\r\n    >\r\n      {children}\r\n    </PostContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}