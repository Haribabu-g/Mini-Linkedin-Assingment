{"ast":null,"code":"// src/pages/Home.js\nimport React,{useContext,useEffect}from'react';import{PostContext,PostProvider}from'../context/PostContext';import{AuthContext}from'../context/AuthContext';import PostForm from'../components/posts/PostForm';import PostItem from'../components/posts/PostItem';import Spinner from'../components/layout/Spinner';import{useNavigate}from'react-router-dom';// This is the actual content of the page\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const HomeContent=()=>{const{posts,loading,getPosts}=useContext(PostContext);const{isAuthenticated,loading:authLoading}=useContext(AuthContext);const navigate=useNavigate();useEffect(()=>{// If authentication is still loading, do nothing yet\nif(authLoading){return;}// If not authenticated, redirect to login\nif(!isAuthenticated){navigate('/login');}else{// Otherwise, get the posts\ngetPosts();}// Rerun this effect if auth state changes\n},[isAuthenticated,authLoading,getPosts,navigate]);// Show a spinner while posts are loading\nif(loading)return/*#__PURE__*/_jsx(Spinner,{});return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{style:{color:'#0a66c2'},children:\"Home Feed\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Welcome to the community!\"}),/*#__PURE__*/_jsx(PostForm,{}),/*#__PURE__*/_jsx(\"div\",{className:\"posts\",children:posts.map(post=>/*#__PURE__*/_jsx(PostItem,{post:post},post._id))})]});};// We wrap the page content in the PostProvider so it has access to post-related state\nconst Home=()=>/*#__PURE__*/_jsx(PostProvider,{children:/*#__PURE__*/_jsx(HomeContent,{})});export default Home;","map":{"version":3,"names":["React","useContext","useEffect","PostContext","PostProvider","AuthContext","PostForm","PostItem","Spinner","useNavigate","jsx","_jsx","jsxs","_jsxs","HomeContent","posts","loading","getPosts","isAuthenticated","authLoading","navigate","children","style","color","className","map","post","_id","Home"],"sources":["C:/Users/HARIBABU/OneDrive/Desktop/project/mini-linkedin-frontend/client/src/pages/Home.js"],"sourcesContent":["// src/pages/Home.js\r\nimport React, { useContext, useEffect } from 'react';\r\nimport { PostContext, PostProvider } from '../context/PostContext';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport PostForm from '../components/posts/PostForm';\r\nimport PostItem from '../components/posts/PostItem';\r\nimport Spinner from '../components/layout/Spinner';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n// This is the actual content of the page\r\nconst HomeContent = () => {\r\n    const { posts, loading, getPosts } = useContext(PostContext);\r\n    const { isAuthenticated, loading: authLoading } = useContext(AuthContext);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        // If authentication is still loading, do nothing yet\r\n        if (authLoading) {\r\n            return;\r\n        }\r\n        // If not authenticated, redirect to login\r\n        if (!isAuthenticated) {\r\n            navigate('/login');\r\n        } else {\r\n            // Otherwise, get the posts\r\n            getPosts();\r\n        }\r\n        // Rerun this effect if auth state changes\r\n    }, [isAuthenticated, authLoading, getPosts, navigate]);\r\n\r\n    // Show a spinner while posts are loading\r\n    if (loading) return <Spinner />;\r\n\r\n    return (\r\n        <div>\r\n            <h1 style={{ color: '#0a66c2' }}>Home Feed</h1>\r\n            <p>Welcome to the community!</p>\r\n            <PostForm />\r\n            <div className=\"posts\">\r\n                {posts.map((post) => (\r\n                    <PostItem key={post._id} post={post} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n// We wrap the page content in the PostProvider so it has access to post-related state\r\nconst Home = () => (\r\n    <PostProvider>\r\n        <HomeContent />\r\n    </PostProvider>\r\n);\r\n\r\nexport default Home;\r\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,UAAU,CAAEC,SAAS,KAAQ,OAAO,CACpD,OAASC,WAAW,CAAEC,YAAY,KAAQ,wBAAwB,CAClE,OAASC,WAAW,KAAQ,wBAAwB,CACpD,MAAO,CAAAC,QAAQ,KAAM,8BAA8B,CACnD,MAAO,CAAAC,QAAQ,KAAM,8BAA8B,CACnD,MAAO,CAAAC,OAAO,KAAM,8BAA8B,CAClD,OAASC,WAAW,KAAQ,kBAAkB,CAE9C;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBACA,KAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,CACtB,KAAM,CAAEC,KAAK,CAAEC,OAAO,CAAEC,QAAS,CAAC,CAAGhB,UAAU,CAACE,WAAW,CAAC,CAC5D,KAAM,CAAEe,eAAe,CAAEF,OAAO,CAAEG,WAAY,CAAC,CAAGlB,UAAU,CAACI,WAAW,CAAC,CACzE,KAAM,CAAAe,QAAQ,CAAGX,WAAW,CAAC,CAAC,CAE9BP,SAAS,CAAC,IAAM,CACZ;AACA,GAAIiB,WAAW,CAAE,CACb,OACJ,CACA;AACA,GAAI,CAACD,eAAe,CAAE,CAClBE,QAAQ,CAAC,QAAQ,CAAC,CACtB,CAAC,IAAM,CACH;AACAH,QAAQ,CAAC,CAAC,CACd,CACA;AACJ,CAAC,CAAE,CAACC,eAAe,CAAEC,WAAW,CAAEF,QAAQ,CAAEG,QAAQ,CAAC,CAAC,CAEtD;AACA,GAAIJ,OAAO,CAAE,mBAAOL,IAAA,CAACH,OAAO,GAAE,CAAC,CAE/B,mBACIK,KAAA,QAAAQ,QAAA,eACIV,IAAA,OAAIW,KAAK,CAAE,CAAEC,KAAK,CAAE,SAAU,CAAE,CAAAF,QAAA,CAAC,WAAS,CAAI,CAAC,cAC/CV,IAAA,MAAAU,QAAA,CAAG,2BAAyB,CAAG,CAAC,cAChCV,IAAA,CAACL,QAAQ,GAAE,CAAC,cACZK,IAAA,QAAKa,SAAS,CAAC,OAAO,CAAAH,QAAA,CACjBN,KAAK,CAACU,GAAG,CAAEC,IAAI,eACZf,IAAA,CAACJ,QAAQ,EAAgBmB,IAAI,CAAEA,IAAK,EAArBA,IAAI,CAACC,GAAkB,CACzC,CAAC,CACD,CAAC,EACL,CAAC,CAEd,CAAC,CAED;AACA,KAAM,CAAAC,IAAI,CAAGA,CAAA,gBACTjB,IAAA,CAACP,YAAY,EAAAiB,QAAA,cACTV,IAAA,CAACG,WAAW,GAAE,CAAC,CACL,CACjB,CAED,cAAe,CAAAc,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}