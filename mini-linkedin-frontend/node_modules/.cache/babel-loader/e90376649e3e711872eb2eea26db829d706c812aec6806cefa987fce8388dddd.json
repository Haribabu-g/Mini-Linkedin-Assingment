{"ast":null,"code":"// src/context/AuthContext.js\nimport React,{createContext,useReducer,useEffect}from'react';import api from'../api';// (The initialState and authReducer remain the same as the previous final version)\nimport{jsx as _jsx}from\"react/jsx-runtime\";const initialState={token:localStorage.getItem('token'),isAuthenticated:null,loading:true,user:null,error:null};const authReducer=(state,action)=>{const{type,payload}=action;switch(type){case'USER_LOADED':return{...state,isAuthenticated:true,loading:false,user:payload};case'LOGIN_SUCCESS':localStorage.setItem('token',payload.token);return{...state,...payload,isAuthenticated:true,loading:false,error:null};case'REGISTER_SUCCESS':return{...state,loading:false,error:null};case'AUTH_ERROR':case'LOGOUT':localStorage.removeItem('token');return{...state,token:null,isAuthenticated:false,loading:false,user:null,error:payload};case'CLEAR_ERRORS':return{...state,error:null};default:return state;}};export const AuthContext=/*#__PURE__*/createContext(initialState);export const AuthProvider=_ref=>{let{children}=_ref;const[state,dispatch]=useReducer(authReducer,initialState);// loadUser, register, login, logout, clearErrors functions remain the same\nconst loadUser=async()=>{if(localStorage.token){try{const res=await api.get('/auth');dispatch({type:'USER_LOADED',payload:res.data});}catch(err){dispatch({type:'AUTH_ERROR'});}}else{dispatch({type:'AUTH_ERROR'});}};useEffect(()=>{loadUser();},[]);const register=async formData=>{try{await api.post('/auth/register',formData);dispatch({type:'REGISTER_SUCCESS'});}catch(err){dispatch({type:'AUTH_ERROR',payload:err.response.data});}};const login=async formData=>{try{const res=await api.post('/auth/login',formData);dispatch({type:'LOGIN_SUCCESS',payload:res.data});}catch(err){dispatch({type:'AUTH_ERROR',payload:err.response.data});}};const logout=()=>dispatch({type:'LOGOUT'});const clearErrors=()=>dispatch({type:'CLEAR_ERRORS'});// --- ADD THESE NEW FUNCTIONS ---\n// Forgot Password\nconst forgotPassword=async email=>{try{await api.post('/auth/forgot-password',email);}catch(err){console.error('Forgot password error',err.response.data);}};// Reset Password\nconst resetPassword=async(token,password)=>{try{await api.post(`/auth/reset-password/${token}`,password);}catch(err){console.error('Reset password error',err.response.data);}};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{token:state.token,isAuthenticated:state.isAuthenticated,loading:state.loading,user:state.user,error:state.error,register,login,logout,clearErrors,loadUser,forgotPassword,// Add to provider\nresetPassword// Add to provider\n},children:children});};","map":{"version":3,"names":["React","createContext","useReducer","useEffect","api","jsx","_jsx","initialState","token","localStorage","getItem","isAuthenticated","loading","user","error","authReducer","state","action","type","payload","setItem","removeItem","AuthContext","AuthProvider","_ref","children","dispatch","loadUser","res","get","data","err","register","formData","post","response","login","logout","clearErrors","forgotPassword","email","console","resetPassword","password","Provider","value"],"sources":["C:/Users/HARIBABU/OneDrive/Desktop/project/mini-linkedin-frontend/client/src/context/AuthContext.js"],"sourcesContent":["// src/context/AuthContext.js\r\nimport React, { createContext, useReducer, useEffect } from 'react';\r\nimport api from '../api';\r\n\r\n// (The initialState and authReducer remain the same as the previous final version)\r\nconst initialState = { token: localStorage.getItem('token'), isAuthenticated: null, loading: true, user: null, error: null };\r\nconst authReducer = (state, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case 'USER_LOADED': return { ...state, isAuthenticated: true, loading: false, user: payload };\r\n    case 'LOGIN_SUCCESS': localStorage.setItem('token', payload.token); return { ...state, ...payload, isAuthenticated: true, loading: false, error: null };\r\n    case 'REGISTER_SUCCESS': return { ...state, loading: false, error: null };\r\n    case 'AUTH_ERROR': case 'LOGOUT': localStorage.removeItem('token'); return { ...state, token: null, isAuthenticated: false, loading: false, user: null, error: payload };\r\n    case 'CLEAR_ERRORS': return { ...state, error: null };\r\n    default: return state;\r\n  }\r\n};\r\n\r\nexport const AuthContext = createContext(initialState);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  // loadUser, register, login, logout, clearErrors functions remain the same\r\n  const loadUser = async () => { if (localStorage.token) { try { const res = await api.get('/auth'); dispatch({ type: 'USER_LOADED', payload: res.data }); } catch (err) { dispatch({ type: 'AUTH_ERROR' }); } } else { dispatch({ type: 'AUTH_ERROR' }); } };\r\n  useEffect(() => { loadUser(); }, []);\r\n  const register = async (formData) => { try { await api.post('/auth/register', formData); dispatch({ type: 'REGISTER_SUCCESS' }); } catch (err) { dispatch({ type: 'AUTH_ERROR', payload: err.response.data }); } };\r\n  const login = async (formData) => { try { const res = await api.post('/auth/login', formData); dispatch({ type: 'LOGIN_SUCCESS', payload: res.data }); } catch (err) { dispatch({ type: 'AUTH_ERROR', payload: err.response.data }); } };\r\n  const logout = () => dispatch({ type: 'LOGOUT' });\r\n  const clearErrors = () => dispatch({ type: 'CLEAR_ERRORS' });\r\n\r\n  // --- ADD THESE NEW FUNCTIONS ---\r\n\r\n  // Forgot Password\r\n  const forgotPassword = async (email) => {\r\n    try {\r\n      await api.post('/auth/forgot-password', email);\r\n    } catch (err) {\r\n      console.error('Forgot password error', err.response.data);\r\n    }\r\n  };\r\n\r\n  // Reset Password\r\n  const resetPassword = async (token, password) => {\r\n    try {\r\n      await api.post(`/auth/reset-password/${token}`, password);\r\n    } catch (err) {\r\n      console.error('Reset password error', err.response.data);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        token: state.token,\r\n        isAuthenticated: state.isAuthenticated,\r\n        loading: state.loading,\r\n        user: state.user,\r\n        error: state.error,\r\n        register,\r\n        login,\r\n        logout,\r\n        clearErrors,\r\n        loadUser,\r\n        forgotPassword, // Add to provider\r\n        resetPassword,  // Add to provider\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}